version: '3.8'

services:
  db:
    image: postgres
    container_name: db_1
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: mjc_db
    networks:
      - mynetwork
    volumes:
        - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "mjc_db"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

  web:
    build: .
    command: gunicorn core.wsgi:application --bind 0.0.0.0:8000
    ports:
      - "8000:8000"
    volumes:
      - ./:/app
      - ./media:/app/media
      - db_data:/app/data/db 
    container_name: web_1
    restart: always
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_HOST: db
      DATABASE_PORT: 5432
      DATABASE_NAME: mjc_db
      DATABASE_USER: ${POSTGRES_USER}
      DATABASE_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - mynetwork

  nginx:
    image: nginx:alpine
    container_name: nginx_1
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./media:/app/media
    ports:
      - "80:80"
    depends_on:
      - web
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge

volumes:
  db_data:
